// Generated by CoffeeScript 1.6.3
(function() {
  describe("CustomSelect", function() {
    var FOCUS_CLASS, PLACEHOLDER_CLASS, getSelectedText;
    FOCUS_CLASS = "global__select--focus";
    PLACEHOLDER_CLASS = "global__select--placeholder";
    getSelectedText = function(container) {
      return container.contents()[1].nodeValue;
    };
    describe("without placeholder", function() {
      var addOption, container, select;
      container = null;
      select = null;
      beforeEach(function() {
        container = $("<div></div>");
        select = $("<select></select>");
        addOption("default");
        container.append(select);
        return select.customSelect();
      });
      addOption = function(text) {
        var option;
        option = $("<option selected>" + text + "</option>");
        return select.append(option);
      };
      describe("setup", function() {
        return it("creates placeholder from first option", function() {
          return expect(getSelectedText(container)).to.be("default");
        });
      });
      describe("on focus", function() {
        return it("adds focus class", function() {
          select.trigger("focus");
          return expect(container.hasClass(FOCUS_CLASS)).to.be.ok();
        });
      });
      describe("on select", function() {
        var addOptionAndSelect;
        it("changes text to selected option", function() {
          addOptionAndSelect("foo");
          return expect(getSelectedText(container)).to.be("foo");
        });
        return addOptionAndSelect = function(text) {
          addOption(text);
          return select.trigger("change");
        };
      });
      return describe("on blur", function() {
        return it("removes focus class", function() {
          select.trigger("focus");
          select.trigger("blur");
          return expect(container.hasClass(FOCUS_CLASS)).not.to.be.ok();
        });
      });
    });
    return describe("with placeholder", function() {
      var container, select;
      container = null;
      select = null;
      beforeEach(function() {
        container = $("<div></div>");
        select = $('<select placeholder="placeholder"></select>');
        container.append(select);
        return select.customSelect();
      });
      describe("setup", function() {
        it("adds text", function() {
          return expect(getSelectedText(container)).to.be("placeholder");
        });
        it("adds selected disabled option", function() {
          return expect(select.html()).to.be('<option disabled="true" selected="selected">placeholder</option>');
        });
        return it("adds placeholder class", function() {
          return expect(container.hasClass(PLACEHOLDER_CLASS)).to.be.ok();
        });
      });
      return describe("on blur", function() {
        return it("adds placeholder class when placeholder option is selected", function() {
          select.trigger("change");
          select.trigger("blur");
          return expect(container.hasClass(PLACEHOLDER_CLASS)).to.be.ok();
        });
      });
    });
  });

}).call(this);
